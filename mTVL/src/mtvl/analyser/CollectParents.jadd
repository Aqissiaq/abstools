import java.util.Set;

/**
Given a set of features, collect in "newParents" all of its parents.
**/


aspect CollectParents {

  //propagate request for getting parents: 
  public void ASTNode.collectParents(Set features, Set newParents) {
    for(int i = 0; i < getNumChild(); i++)
      getChildNoTransform(i).collectParents(features, newParents);
  }

  public void Feature.collectParents(Set features, Set newParents) {
    if (newParents.contains(getName())) return;
    if (features.contains(getName())) getParent().collectParents(newParents);
    super.collectParents(features, newParents);
  }

  public void ASTNode.collectParents(Set newParents) {
    if (getParent() != null) getParent().collectParents(newParents); // go up!
  }

  public void Feature.collectParents(Set newParents) {
    if (!newParents.contains(getName())) {
      newParents.add(getName());
      getParent().collectParents(newParents); // go up!
    }
  }

  public void CompilationUnit.collectParents(Set newParents) {
    // and stop going up
  } 
}


