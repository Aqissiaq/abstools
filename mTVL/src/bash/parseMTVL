#!/bin/bash
# Arild Torjusen, April 2010, then hacked by others too...


# Note on below line: The Ant target "genshell" substitutes
# "@-BASEDIR-@" (without the "-"'s) with the value of Ant variable
# BASEDIR, see build.xml.
BASEDIR="@BASEDIR@"

# Pick out the last part of the path to the script's name
progname=${0##*/}

function usage
{
#    echo "Usage: "$progname" [-hvsc] [FSL file] <mTVL files>"
#    echo
    echo "*******************************"
    echo "*       MTVL TOOL SUITE       *"
    echo "*******************************"
    echo "Usage: "$progname" [options] [prodname] [absfile] <mtvlfiles>" 
    echo "  [prodname]     name of the product to check: mandatory with option -c" 
    echo "  [absfile]      ABS file to parse: mandatory with option -c" 
    echo "  <mtvlfiles>    mTVL files to parse" 
    echo "Options:"
    echo "  -v            verbose output" 
    echo "  -s            solve constraint satisfaction problem" 
    echo "  -c            check satisfiability of a feature selection" 
    echo "  -h            print help message"

}

function identify
{
    echo $0":"	# Use full program path here in case of src-bin confusion
}

function help
{
    identify;
    usage;
#     echo "Legal options: "
#     echo "-h : Display help"
#     echo "-v : Verbose"
#     echo "-s : Solve CSP"
#     echo "-c : Check satisfiability of a feature selection" 
     exit 0
}

while getopts "h v s c" Option
#while getopts "h o: v t" Option	# Note: "o:" means "-o" takes an arg.
do
  case $Option in
    h ) help;; 
    v ) verbose="-v";;
    s ) solve="-s";;
    c ) check="-c";;
#    t ) typecheck="-t";;
#    o ) outfile=$OPTARG;;
    * ) usage; exit 1;;
  esac
done
shift $(($OPTIND - 1))

# Note the convoluted writing of string constant in the conditional.  
# We do not want Ant do the subsitution here
if [ $BASEDIR = '@'"BASEDIR"'@' ] ; then 
    identify;
    echo "ERROR: You're running the source version of the script."
    echo "Instead, run Ant with target genshell (or gen),"
    echo "and then run the generated script from the bin/bash directory."
    exit 1
fi

if [ -z $BASEDIR  ] ; then 
    identify;
    echo "ERROR: BASEDIR not set or empty.  This should not happen..."
    echo "Please read the script source to understand why."
    exit 1
fi

if [ -n "$1" ] ; then
    java -cp $BASEDIR/lib/beaver.jar:$BASEDIR/bin:$BASEDIR/lib/choco-solver-2.1.1.jar:$BASEDIR/../frontend/bin/ \
        mtvl.parser.Main $verbose $solve $check $@
else
    echo $progname: "No mTVL files specified"
fi
