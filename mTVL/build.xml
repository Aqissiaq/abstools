<?xml version="1.0"?>
<project name="mTVL Feature Model" default="compile" basedir=".">
  <!-- $Id$ -->

  <property environment="env" />
  <!-- include environment variables -->

  <property name="src.dir" value="${basedir}/src" />
  <property name="bash.dir" value="${src.dir}/bash" />
  <property name="tests.dir" value="${basedir}/tests" />
  <property name="build.dir" value="${basedir}/bin" />
  <property name="bash.build.dir" value="${basedir}/bin/bash" />
  <property name="dist.dir" value="${basedir}/dist" />
  <property name="gen.dir" value="${basedir}/gen" />
  <!-- temporal directory used during tests -->
  <property name="gen.test.dir" value="${basedir}/gen" />
  <property name="ext.dir" value="${basedir}/lib" />
  <property name="ast.src.dir" value="${src.dir}/abs/ast" />
  <!-- TODO: about ast.gen.dir and JastAdd idiosyncrasies -->
  <property name="apidoc.dir" value="${gen.dir}/docs/api" />
  <property name="junit.jar" value="junit-4.8.1.jar" />

  <!-- new properties for mTVL related parser -->
  <property name="ast.src.dir" value="${src.dir}/mtvl/ast" />
  <property name="ast.gen.dir" value="${gen.dir}/mtvl" />
  <property name="parser.src.dir" value="${src.dir}/mtvl/parser" />
  <property name="parser.gen.dir" value="${gen.dir}/mtvl/parser" />


  <!-- The package name of JastAdd generated files -->
  <property name="ast.package" value= "mtvl.ast" />

  <!-- ABS references -->
  <property name="abs.dir" value="${basedir}/../frontend" />
  <property name="abs.tests.dir" value="${abs.dir}/tests" />
  <property name="abs.build.dir" value="${abs.dir}/bin" />
  <property name="abs.gen.dir" value="${abs.dir}/gen" />


  <!-- "jflex" is an ant task class for the scanner generator in JFlex.jar -->
  <taskdef name="jflex" classname="JFlex.anttask.JFlexTask" classpath="${ext.dir}/JFlex.jar" />

  <!-- "beaver" is an ant task class for the parser generator in beaver.jar -->
  <taskdef name="beaver" classname="beaver.comp.run.AntTask" classpath="${ext.dir}/beaver.jar" />

  <!-- "jastadd" is an ant task class in jastadd2.jar -->
  <taskdef name="jastadd" classname="jastadd.JastAddTask" classpath="${ext.dir}/jastadd2.jar" />


  <target name="prepare">
    <mkdir dir="${gen.dir}" />
    <mkdir dir="${gen.test.dir}" />
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${ast.gen.dir}" />
    <mkdir dir="${parser.gen.dir}" />
    <mkdir dir="${build.dir}" />
    <!-- <mkdir dir = "${dist.dir}"/> -->
    <mkdir dir="${apidoc.dir}" />
  </target>

  <target name="compile" depends="prepare, gen" description="Compiles all java files in the source directory.">
    <javac srcdir="${src.dir}/mtvl:${gen.dir}:${tests.dir}" destdir="${build.dir}" deprecation="on" debug="on" depend="${build.depend}" optimize="off">
      <classpath>
        <pathelement location="${ext.dir}/Java1.5Compiler.jar" />
        <pathelement location="${ext.dir}/beaver.jar" />
        <pathelement location="${ext.dir}/jastadd2.jar" />
        <pathelement location="${ext.dir}/JastAddParser.jar" />
        <pathelement location="${ext.dir}/${junit.jar}" />
        <pathelement location="${ext.dir}/choco-solver-2.1.1.jar" />
        <pathelement location="${ext.dir}/org.sat4j.core.jar" />
        <pathelement location="${ext.dir}/org.sat4j.maxsat.jar" />
        <pathelement location="${ext.dir}/org.sat4j.pb.jar" />
        <pathelement location="${ext.dir}/sat4j-maxsat.jar" />
        <pathelement location="${ext.dir}/sat4j-pb.jar" />
        <pathelement location="${abs.gen.dir}" />
        <pathelement location="${abs.build.dir}" />
      </classpath>
    </javac>
  </target>

  <target name="javadoc" depends="gen,compile" description="Build java doc.">
    <javadoc sourcepath="${src.dir}:${gen.dir}" destdir="${apidoc.dir}">
      <classpath>
        <pathelement location="${ext.dir}/beaver.jar" />
        <pathelement location="${ext.dir}/jastadd2.jar" />
        <pathelement location="${ext.dir}/JastAddParser.jar" />
      </classpath>
    </javadoc>
  </target>


  <target name="clean">
    <delete failonerror="false" includeemptydirs="true">
      <fileset dir="${gen.dir}/mtvl" />
      <!--       <fileset dir = "${gen.dir}/docs"/> -->
      <fileset dir="${build.dir}" />
      <fileset dir="${dist.dir}" />
    </delete>
  </target>

  <target name="rebuild" depends="clean, compile">
  </target>

  <target name="build" depends="compile">
  </target>


  <!-- generate MTVL -->

  <target name="gen" depends="genast, genparser, genshell">
  </target>

  <target name="genshell">
    <copy todir="${bash.build.dir}">
      <filelist id="shellfiles" dir="${bash.dir}" files="parseMTVL" />
      <filterset>
        <filter token="BASEDIR" value="${basedir}" />
      </filterset>
    </copy>
    <chmod perm="ugo+x">
      <filelist dir="${bash.build.dir}" files="parseMTVL" />
    </chmod>
  </target>

  <!-- mtvl's AST -->
  <target name="genast">
    <jastadd package="${ast.package}" rewrite="true" beaver="true" novisitcheck="true" outdir="${gen.dir}" debug="true">
      <fileset dir=".">
        <include name="src/mtvl/**/*.ast" />
        <include name="src/mtvl/**/*.jadd" />
        <include name="src/mtvl/**/*.jrag" />
      </fileset>
    </jastadd>
  </target>

  <!-- mtvl's Scanner -->
  <target name="genscanner">
    <echo message="Running jflex" />
    <jflex file="${parser.src.dir}/mTVL.flex" outdir="${parser.gen.dir}" nobak="yes" />
  </target>

  <!-- mtvl's Parser -->
  <target name="genparser" depends="genscanner, genast">
    <echo message="Running beaver" />
    <beaver file="${parser.src.dir}/mTVL.beaver"
            destdir = "${parser.gen.dir}"
            terminalNames="yes" compress="no" useSwitch="yes" />
  </target>



  <!-- create distribution files for mTVL -->

  <target name="dist" depends="clean,compile" description="create distribution files">
    <jar jarfile="${dist.dir}/mtvl.jar">
      <fileset dir="${build.dir}" includes="mtvl/**" />
      <fileset dir="${src.dir}" includes="mtvl/**" />
      <zipfileset src="${ext.dir}/jastadd2.jar" />
      <zipfileset src="${ext.dir}/beaver-rt-src.jar" />
      <zipfileset src="${ext.dir}/JFlex.jar" />
      <zipfileset src="${ext.dir}/Java1.5Compiler.jar" />
      <zipfileset src="${ext.dir}/org.sat4j.core.jar" />
      <zipfileset src="${ext.dir}/org.sat4j.pb.jar" />
      <zipfileset src="${ext.dir}/sat4j-maxsat.jar" />
      <zipfileset src="${ext.dir}/choco-solver-2.1.1.jar" />
      <manifest>
        <attribute name="Main-Class" value="mtvl.parser.Main"/>
      </manifest>
    </jar>
  </target>


  <!-- test classpath -->
  <path id="test.classpath">
    <pathelement location="${build.dir}" />
    <pathelement location="${ext.dir}/${junit.jar}" />
    <pathelement location="${ext.dir}/beaver-rt-src.jar" />
    <pathelement location="${ext.dir}/Java1.5Compiler.jar" />
    <pathelement location="${ext.dir}/org.sat4j.core.jar" />
    <pathelement location="${ext.dir}/org.sat4j.maxsat.jar" />
    <pathelement location="${ext.dir}/org.sat4j.pb.jar" />
    <pathelement location="${ext.dir}/sat4j-maxsat.jar" />
    <pathelement location="${ext.dir}/sat4j-pb.jar" />
  </path>

  <!-- suite file - NO UNIT TESTS YET -->
  <property name="test.mtvl.suite.name" value="mtvl.AllTests" />

  <target name="unit-tests" depends="compile">
    <junit fork="yes" haltonfailure="yes">
      <test name="${test.mtvl.suite.name}" />
      <formatter type="plain" usefile="false" />
      <classpath refid="test.classpath" />
    </junit>
  </target>
  <!-- From command line: -->
  <!-- java -cp bin:lib/junit-4.8.1.jar:lib/beaver-rt-src.jar  org.junit.runner.JUnitCore mtvl.AllTests -->


  <!-- MTVL - run a single test in verbose mode -->
  <target name="testmtvl" depends="compile">
    <echo message="Parsing mtvlsamples/runningtest.mtvl"/>
    <java classpath="${ext.dir}/beaver.jar:${build.dir}:${abs.build.dir}:${ext.dir}/choco-solver-2.1.1.jar" classname="mtvl.parser.Main">
      <arg line="-v ${tests.dir}/mtvlsamples/runningtest.mtvl" />
    </java>
  </target>

  <!-- MTVL - run a test for the ChosoSolver main method (sandbox) -->
  <target name="testchoco" depends="compile">
    <echo message="Running ChocoSolver.java"/>
    <java classpath="${ext.dir}/beaver.jar:${build.dir}:${abs.build.dir}:${ext.dir}/choco-solver-2.1.1.jar" classname="mtvl.analyser.ChocoSolver">
    </java>
  </target>

  <!-- MTVL - run a test for the computer with solver -->
  <target name="testcomp" depends="compile">
    <echo message="Parsing mtvlsamples/computer.mtvl"/>
    <java classpath="${ext.dir}/beaver.jar:${build.dir}:${abs.build.dir}:${ext.dir}/choco-solver-2.1.1.jar" classname="mtvl.parser.Main">
      <arg line="-s ${tests.dir}/mtvlsamples/computer.mtvl" />
    </java>
  </target>

  <!-- MTVL/FSL - checking satisfiability of a FS wrt a PL in verbose mode. Using computer example, with negative result. -->
  <target name="testsatneg" depends="compile">
    <echo message="Checking satisfiability of fslsamples/computer.fsl wrt mtvlsamples/computer.mtvl"/>
    <java classpath="${ext.dir}/beaver.jar:${build.dir}:${abs.build.dir}:${ext.dir}/choco-solver-2.1.1.jar" classname="mtvl.parser.Main">
      <arg line="-v -c P1 ${abs.tests.dir}/fslsamples/computer.fsl ${tests.dir}/mtvlsamples/computer.mtvl ${tests.dir}/mtvlsamples/computerext.mtvl" />
    </java>

  </target>

  <!-- MTVL/FSL - checking satisfiability of a FS wrt a PL in verbose mode. Using helloworld example, with positive result. -->
  <target name="testsatpos" depends="compile">
    <echo message="Checking satisfiability of fslsamples/computer.fsl wrt mtvlsamples/computer.mtvl"/>
    <java classpath="${ext.dir}/beaver.jar:${build.dir}:${abs.build.dir}:${ext.dir}/choco-solver-2.1.1.jar" classname="mtvl.parser.Main">
      <arg line="-v -c P3 ${abs.tests.dir}/abssamples/deltas/hello.abs ${tests.dir}/mtvlsamples/helloworld.mtvl" />
    </java>
  </target>


</project>
