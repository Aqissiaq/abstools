Timed Model Simulation in Maude

* Introduction

  ABS models can be augmented with timing information and their
  execution simulated on the Maude backend.  The timed Maude backend
  adds a model of a clock counting up from <<<0>>>.  This section
  describes language features related to this clock.

* Language Elements

** Time

   The current value of the clock can be accessed with the <<<now()>>>
   function, which returns a value of type <<<Time>>>.  The function
   <<<currentms()>>> returns an integer value and is also available on
   the Java backend, where it returns the system time.

+---
Time t = now();
+---

** Advancing time in the COG

   The <<<duration(min, max)>>> statement causes execution on the
   current COG to be blocked for at least <<<min>>> and at most
   <<<max>>> time units.  This is used to simulate methods taking some
   amount of time for execution.  (In the Java backend, time passes on
   its own, so the <<<duration>>> statement does nothing there.)

+---
// Time will advance between 3 and 5 units during execution of m
Unit m() {
  duration(3, 5);
}
+---

** Advancing time in a process

   The statement <<<await duration(min, max)>>> causes the running
   process to be suspended for at least <<<min>>> time units.  The
   difference to the <<<duration>>> statement is that other processes in
   the same COG are allowed to run while the process is suspended.
   Similar to the <<<duration>>> statement, this is for simulation
   purposes, so <<<await duration>>> statements do not suspend the
   process in the Java backend.


+---
// m will return after at least 3 time units
Unit m() {
  await duration(3, 5);
}
+---

