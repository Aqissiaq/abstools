module Request;

export RequestImpl;

import * from Interfaces;

class RequestImpl(
	String user,
	Time time,
	Int size,
	Bool priority,
	ResourceConfig config
) implements Request {

	String resource_id = Nil;
	Int progress = 0;
	List<RequestListener> listeners = Nil;

	String user(){ return user; }
	
	Time time(){ return time; }
	
	Int size(){ return size; }
	
	Bool priority(){ return priority; }
	
	ResourceConfig config(){ return config; }
	
	String resourceId(){ return resource_id; }
	
	Unit setResourceId(String id){ resource_id = id; }
	
	Int progress(){ return progress; }

	Unit setProgress(Int p){
		if (p < -1){
			p = -1;
		}else if (p > 100){
			p = 100;
		}
		if (progress != p && ((progress < 0 && p >= 0) || p > progress)){
			progress = p;
			this.notifyListeners();
		}
	}
	
	Unit addRequestListener(RequestListener l){
		if ( not(list_contains(listeners, l)) ){
			listeners = Cons(l, listeners);
		}
	}
	
	Unit notifyListeners(){
		List<RequestListener> list = listeners;
		while (list != Nil){
			RequestListener l = head(list);
			Unit u = l!progressChanged(this); // ASYNC
			list = tail(list);
		}
	}

}