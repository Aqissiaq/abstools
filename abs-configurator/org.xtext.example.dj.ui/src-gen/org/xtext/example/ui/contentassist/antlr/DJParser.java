/*
* generated by Xtext
*/
package org.xtext.example.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.services.DJGrammarAccess;

public class DJParser extends AbstractContentAssistParser {
	
	@Inject
	private DJGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.ui.contentassist.antlr.internal.InternalDJParser createParser() {
		org.xtext.example.ui.contentassist.antlr.internal.InternalDJParser result = new org.xtext.example.ui.contentassist.antlr.internal.InternalDJParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModuleAccess().getAlternatives(), "rule__Module__Alternatives");
					put(grammarAccess.getMethodBodyAccess().getAlternatives_1(), "rule__MethodBody__Alternatives_1");
					put(grammarAccess.getOperationAccess().getAlternatives(), "rule__Operation__Alternatives");
					put(grammarAccess.getConditionAccess().getAlternatives_1(), "rule__Condition__Alternatives_1");
					put(grammarAccess.getClassmAccess().getAlternatives(), "rule__Classm__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getTypeAccess().getBasicAlternatives_0_0(), "rule__Type__BasicAlternatives_0_0");
					put(grammarAccess.getMessageAccess().getAlternatives(), "rule__Message__Alternatives");
					put(grammarAccess.getTerminalExpressionAccess().getAlternatives(), "rule__TerminalExpression__Alternatives");
					put(grammarAccess.getVariableAccess().getAlternatives(), "rule__Variable__Alternatives");
					put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getFeaturesAccess().getGroup(), "rule__Features__Group__0");
					put(grammarAccess.getFeaturesAccess().getGroup_1(), "rule__Features__Group_1__0");
					put(grammarAccess.getFeaturesAccess().getGroup_1_1(), "rule__Features__Group_1_1__0");
					put(grammarAccess.getModuleAccess().getGroup_0(), "rule__Module__Group_0__0");
					put(grammarAccess.getModuleAccess().getGroup_0_1(), "rule__Module__Group_0_1__0");
					put(grammarAccess.getModuleAccess().getGroup_1(), "rule__Module__Group_1__0");
					put(grammarAccess.getCoreAccess().getGroup(), "rule__Core__Group__0");
					put(grammarAccess.getCoreAccess().getGroup_1(), "rule__Core__Group_1__0");
					put(grammarAccess.getClassAccess().getGroup(), "rule__Class__Group__0");
					put(grammarAccess.getClassAccess().getGroup_2(), "rule__Class__Group_2__0");
					put(grammarAccess.getConstructorAccess().getGroup(), "rule__Constructor__Group__0");
					put(grammarAccess.getConstructorAccess().getGroup_2(), "rule__Constructor__Group_2__0");
					put(grammarAccess.getConstructorAccess().getGroup_2_1(), "rule__Constructor__Group_2_1__0");
					put(grammarAccess.getConstructorSuperExpressionAccess().getGroup(), "rule__ConstructorSuperExpression__Group__0");
					put(grammarAccess.getConstructorSuperExpressionAccess().getGroup_1(), "rule__ConstructorSuperExpression__Group_1__0");
					put(grammarAccess.getConstructorSuperExpressionAccess().getGroup_1_2(), "rule__ConstructorSuperExpression__Group_1_2__0");
					put(grammarAccess.getConstructorSuperExpressionAccess().getGroup_1_2_1(), "rule__ConstructorSuperExpression__Group_1_2_1__0");
					put(grammarAccess.getConstructorFieldExpressionAccess().getGroup(), "rule__ConstructorFieldExpression__Group__0");
					put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
					put(grammarAccess.getMethodAccess().getGroup_3(), "rule__Method__Group_3__0");
					put(grammarAccess.getMethodAccess().getGroup_3_1(), "rule__Method__Group_3_1__0");
					put(grammarAccess.getMethodBodyAccess().getGroup(), "rule__MethodBody__Group__0");
					put(grammarAccess.getMethodBodyAccess().getGroup_1_1(), "rule__MethodBody__Group_1_1__0");
					put(grammarAccess.getMethodBodyAccess().getGroup_2(), "rule__MethodBody__Group_2__0");
					put(grammarAccess.getDeltaAccess().getGroup(), "rule__Delta__Group__0");
					put(grammarAccess.getDeltaAccess().getGroup_1(), "rule__Delta__Group_1__0");
					put(grammarAccess.getDeltaAccess().getGroup_1_2(), "rule__Delta__Group_1_2__0");
					put(grammarAccess.getDeltaAccess().getGroup_4(), "rule__Delta__Group_4__0");
					put(grammarAccess.getConfigurationAccess().getGroup(), "rule__Configuration__Group__0");
					put(grammarAccess.getConfigAccess().getGroup(), "rule__Config__Group__0");
					put(grammarAccess.getConfigAccess().getGroup_1(), "rule__Config__Group_1__0");
					put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
					put(grammarAccess.getConditionAccess().getGroup_1_0(), "rule__Condition__Group_1_0__0");
					put(grammarAccess.getClassmAccess().getGroup_0(), "rule__Classm__Group_0__0");
					put(grammarAccess.getClassmAccess().getGroup_1(), "rule__Classm__Group_1__0");
					put(grammarAccess.getClassmAccess().getGroup_2(), "rule__Classm__Group_2__0");
					put(grammarAccess.getModifiesClassAccess().getGroup(), "rule__ModifiesClass__Group__0");
					put(grammarAccess.getModifiesClassAccess().getGroup_2(), "rule__ModifiesClass__Group_2__0");
					put(grammarAccess.getMethodmAccess().getGroup(), "rule__Methodm__Group__0");
					put(grammarAccess.getMethodmAccess().getGroup_1(), "rule__Methodm__Group_1__0");
					put(grammarAccess.getMethodmAccess().getGroup_2(), "rule__Methodm__Group_2__0");
					put(grammarAccess.getMethodmAccess().getGroup_3(), "rule__Methodm__Group_3__0");
					put(grammarAccess.getModifiesMethodAccess().getGroup(), "rule__ModifiesMethod__Group__0");
					put(grammarAccess.getModifiesMethodAccess().getGroup_4(), "rule__ModifiesMethod__Group_4__0");
					put(grammarAccess.getModifiesMethodAccess().getGroup_4_1(), "rule__ModifiesMethod__Group_4_1__0");
					put(grammarAccess.getRemovesMethodAccess().getGroup(), "rule__RemovesMethod__Group__0");
					put(grammarAccess.getFieldmAccess().getGroup(), "rule__Fieldm__Group__0");
					put(grammarAccess.getFieldmAccess().getGroup_1(), "rule__Fieldm__Group_1__0");
					put(grammarAccess.getFieldmAccess().getGroup_2(), "rule__Fieldm__Group_2__0");
					put(grammarAccess.getRenamesFieldAccess().getGroup(), "rule__RenamesField__Group__0");
					put(grammarAccess.getRemovesFieldAccess().getGroup(), "rule__RemovesField__Group__0");
					put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
					put(grammarAccess.getExpressionAccess().getGroup_1(), "rule__Expression__Group_1__0");
					put(grammarAccess.getExpressionAccess().getGroup_2(), "rule__Expression__Group_2__0");
					put(grammarAccess.getMethodCallAccess().getGroup(), "rule__MethodCall__Group__0");
					put(grammarAccess.getMethodCallAccess().getGroup_2(), "rule__MethodCall__Group_2__0");
					put(grammarAccess.getMethodCallAccess().getGroup_2_1(), "rule__MethodCall__Group_2_1__0");
					put(grammarAccess.getInsertJavaAccess().getGroup(), "rule__InsertJava__Group__0");
					put(grammarAccess.getNewAccess().getGroup(), "rule__New__Group__0");
					put(grammarAccess.getNewAccess().getGroup_3(), "rule__New__Group_3__0");
					put(grammarAccess.getNewAccess().getGroup_3_1(), "rule__New__Group_3_1__0");
					put(grammarAccess.getCastAccess().getGroup(), "rule__Cast__Group__0");
					put(grammarAccess.getCastAccess().getGroup_0(), "rule__Cast__Group_0__0");
					put(grammarAccess.getOriginalAccess().getGroup(), "rule__Original__Group__0");
					put(grammarAccess.getOriginalAccess().getGroup_3(), "rule__Original__Group_3__0");
					put(grammarAccess.getOriginalAccess().getGroup_3_1(), "rule__Original__Group_3_1__0");
					put(grammarAccess.getProgramAccess().getImportsAssignment_0(), "rule__Program__ImportsAssignment_0");
					put(grammarAccess.getProgramAccess().getFeaturesAssignment_1(), "rule__Program__FeaturesAssignment_1");
					put(grammarAccess.getProgramAccess().getModulesListAssignment_2(), "rule__Program__ModulesListAssignment_2");
					put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
					put(grammarAccess.getFeaturesAccess().getFeaturesListAssignment_1_0(), "rule__Features__FeaturesListAssignment_1_0");
					put(grammarAccess.getFeaturesAccess().getFeaturesListAssignment_1_1_1(), "rule__Features__FeaturesListAssignment_1_1_1");
					put(grammarAccess.getFeaturesAccess().getConfigurationAssignment_3(), "rule__Features__ConfigurationAssignment_3");
					put(grammarAccess.getFeatureAccess().getNameAssignment(), "rule__Feature__NameAssignment");
					put(grammarAccess.getModuleAccess().getNtypeAssignment_0_1_0(), "rule__Module__NtypeAssignment_0_1_0");
					put(grammarAccess.getModuleAccess().getCoreAssignment_0_1_1(), "rule__Module__CoreAssignment_0_1_1");
					put(grammarAccess.getModuleAccess().getNtypeAssignment_1_0(), "rule__Module__NtypeAssignment_1_0");
					put(grammarAccess.getModuleAccess().getDeltaAssignment_1_1(), "rule__Module__DeltaAssignment_1_1");
					put(grammarAccess.getCoreAccess().getNameAssignment_0(), "rule__Core__NameAssignment_0");
					put(grammarAccess.getCoreAccess().getNameAssignment_1_1(), "rule__Core__NameAssignment_1_1");
					put(grammarAccess.getCoreAccess().getClassesListAssignment_3(), "rule__Core__ClassesListAssignment_3");
					put(grammarAccess.getClassAccess().getNameAssignment_1(), "rule__Class__NameAssignment_1");
					put(grammarAccess.getClassAccess().getExtendsAssignment_2_1(), "rule__Class__ExtendsAssignment_2_1");
					put(grammarAccess.getClassAccess().getFieldAssignment_4(), "rule__Class__FieldAssignment_4");
					put(grammarAccess.getClassAccess().getConstructorAssignment_5(), "rule__Class__ConstructorAssignment_5");
					put(grammarAccess.getClassAccess().getMethodAssignment_6(), "rule__Class__MethodAssignment_6");
					put(grammarAccess.getConstructorAccess().getNameAssignment_0(), "rule__Constructor__NameAssignment_0");
					put(grammarAccess.getConstructorAccess().getParamsAssignment_2_0(), "rule__Constructor__ParamsAssignment_2_0");
					put(grammarAccess.getConstructorAccess().getParamsAssignment_2_1_1(), "rule__Constructor__ParamsAssignment_2_1_1");
					put(grammarAccess.getConstructorAccess().getConstructorSuperExpressionAssignment_5(), "rule__Constructor__ConstructorSuperExpressionAssignment_5");
					put(grammarAccess.getConstructorAccess().getConstructorFieldExpressionAssignment_6(), "rule__Constructor__ConstructorFieldExpressionAssignment_6");
					put(grammarAccess.getConstructorSuperExpressionAccess().getParSAssignment_1_2_0(), "rule__ConstructorSuperExpression__ParSAssignment_1_2_0");
					put(grammarAccess.getConstructorSuperExpressionAccess().getParSAssignment_1_2_1_1(), "rule__ConstructorSuperExpression__ParSAssignment_1_2_1_1");
					put(grammarAccess.getConstructorFieldExpressionAccess().getFieldAssignment_2(), "rule__ConstructorFieldExpression__FieldAssignment_2");
					put(grammarAccess.getConstructorFieldExpressionAccess().getParTAssignment_4(), "rule__ConstructorFieldExpression__ParTAssignment_4");
					put(grammarAccess.getFieldAccess().getTypeAssignment_0(), "rule__Field__TypeAssignment_0");
					put(grammarAccess.getFieldAccess().getReferenceAssignment_1(), "rule__Field__ReferenceAssignment_1");
					put(grammarAccess.getFieldRefAccess().getNameAssignment(), "rule__FieldRef__NameAssignment");
					put(grammarAccess.getParameterAccess().getTypeAssignment_0(), "rule__Parameter__TypeAssignment_0");
					put(grammarAccess.getParameterAccess().getNameAssignment_1(), "rule__Parameter__NameAssignment_1");
					put(grammarAccess.getMethodAccess().getReturntypeAssignment_0(), "rule__Method__ReturntypeAssignment_0");
					put(grammarAccess.getMethodAccess().getReferenceAssignment_1(), "rule__Method__ReferenceAssignment_1");
					put(grammarAccess.getMethodAccess().getParamsAssignment_3_0(), "rule__Method__ParamsAssignment_3_0");
					put(grammarAccess.getMethodAccess().getParamsAssignment_3_1_1(), "rule__Method__ParamsAssignment_3_1_1");
					put(grammarAccess.getMethodAccess().getBodyAssignment_6(), "rule__Method__BodyAssignment_6");
					put(grammarAccess.getMethodRefAccess().getNameAssignment(), "rule__MethodRef__NameAssignment");
					put(grammarAccess.getMethodBodyAccess().getInsertJavaAssignment_1_0(), "rule__MethodBody__InsertJavaAssignment_1_0");
					put(grammarAccess.getMethodBodyAccess().getExpressionsAssignment_1_1_0(), "rule__MethodBody__ExpressionsAssignment_1_1_0");
					put(grammarAccess.getMethodBodyAccess().getReturnAssignment_2_0(), "rule__MethodBody__ReturnAssignment_2_0");
					put(grammarAccess.getMethodBodyAccess().getExpressionReturnAssignment_2_1(), "rule__MethodBody__ExpressionReturnAssignment_2_1");
					put(grammarAccess.getDeltaAccess().getNameAssignment_0(), "rule__Delta__NameAssignment_0");
					put(grammarAccess.getDeltaAccess().getAfterAssignment_1_1(), "rule__Delta__AfterAssignment_1_1");
					put(grammarAccess.getDeltaAccess().getAfterAssignment_1_2_1(), "rule__Delta__AfterAssignment_1_2_1");
					put(grammarAccess.getDeltaAccess().getConditionAssignment_3(), "rule__Delta__ConditionAssignment_3");
					put(grammarAccess.getDeltaAccess().getConditionAssignment_4_1(), "rule__Delta__ConditionAssignment_4_1");
					put(grammarAccess.getDeltaAccess().getClassesListAssignment_6(), "rule__Delta__ClassesListAssignment_6");
					put(grammarAccess.getConfigurationAccess().getFeatureListAssignment_0(), "rule__Configuration__FeatureListAssignment_0");
					put(grammarAccess.getConfigAccess().getFeatureAssignment_0(), "rule__Config__FeatureAssignment_0");
					put(grammarAccess.getConfigAccess().getFeatureAssignment_1_1(), "rule__Config__FeatureAssignment_1_1");
					put(grammarAccess.getConditionAccess().getComplementAssignment_0(), "rule__Condition__ComplementAssignment_0");
					put(grammarAccess.getConditionAccess().getCondition1Assignment_1_0_1(), "rule__Condition__Condition1Assignment_1_0_1");
					put(grammarAccess.getConditionAccess().getOperationAssignment_1_0_2(), "rule__Condition__OperationAssignment_1_0_2");
					put(grammarAccess.getConditionAccess().getCondition2Assignment_1_0_3(), "rule__Condition__Condition2Assignment_1_0_3");
					put(grammarAccess.getConditionAccess().getFeatureAssignment_1_1(), "rule__Condition__FeatureAssignment_1_1");
					put(grammarAccess.getClassmAccess().getActionAssignment_0_0(), "rule__Classm__ActionAssignment_0_0");
					put(grammarAccess.getClassmAccess().getModifiesAssignment_0_1(), "rule__Classm__ModifiesAssignment_0_1");
					put(grammarAccess.getClassmAccess().getActionAssignment_1_0(), "rule__Classm__ActionAssignment_1_0");
					put(grammarAccess.getClassmAccess().getAddsAssignment_1_1(), "rule__Classm__AddsAssignment_1_1");
					put(grammarAccess.getClassmAccess().getActionAssignment_2_0(), "rule__Classm__ActionAssignment_2_0");
					put(grammarAccess.getClassmAccess().getRemoveAssignment_2_1(), "rule__Classm__RemoveAssignment_2_1");
					put(grammarAccess.getModifiesClassAccess().getClassAssignment_1(), "rule__ModifiesClass__ClassAssignment_1");
					put(grammarAccess.getModifiesClassAccess().getExtendsAssignment_2_1(), "rule__ModifiesClass__ExtendsAssignment_2_1");
					put(grammarAccess.getModifiesClassAccess().getFieldAssignment_4(), "rule__ModifiesClass__FieldAssignment_4");
					put(grammarAccess.getModifiesClassAccess().getConstructorAssignment_5(), "rule__ModifiesClass__ConstructorAssignment_5");
					put(grammarAccess.getModifiesClassAccess().getMethodAssignment_6(), "rule__ModifiesClass__MethodAssignment_6");
					put(grammarAccess.getAddsClassAccess().getClassAssignment(), "rule__AddsClass__ClassAssignment");
					put(grammarAccess.getRemoveClassAccess().getClassAssignment(), "rule__RemoveClass__ClassAssignment");
					put(grammarAccess.getMethodmAccess().getRemoveListAssignment_1_1(), "rule__Methodm__RemoveListAssignment_1_1");
					put(grammarAccess.getMethodmAccess().getModifiesListAssignment_2_1(), "rule__Methodm__ModifiesListAssignment_2_1");
					put(grammarAccess.getMethodmAccess().getAddsListAssignment_3_1(), "rule__Methodm__AddsListAssignment_3_1");
					put(grammarAccess.getAddsMethodAccess().getMethodAssignment(), "rule__AddsMethod__MethodAssignment");
					put(grammarAccess.getModifiesMethodAccess().getReturntypeAssignment_1(), "rule__ModifiesMethod__ReturntypeAssignment_1");
					put(grammarAccess.getModifiesMethodAccess().getMethodRefAssignment_2(), "rule__ModifiesMethod__MethodRefAssignment_2");
					put(grammarAccess.getModifiesMethodAccess().getParamsAssignment_4_0(), "rule__ModifiesMethod__ParamsAssignment_4_0");
					put(grammarAccess.getModifiesMethodAccess().getParamsAssignment_4_1_1(), "rule__ModifiesMethod__ParamsAssignment_4_1_1");
					put(grammarAccess.getModifiesMethodAccess().getBodyAssignment_7(), "rule__ModifiesMethod__BodyAssignment_7");
					put(grammarAccess.getRemovesMethodAccess().getMethodRefAssignment_0(), "rule__RemovesMethod__MethodRefAssignment_0");
					put(grammarAccess.getFieldmAccess().getRemoveListAssignment_1_1(), "rule__Fieldm__RemoveListAssignment_1_1");
					put(grammarAccess.getFieldmAccess().getAddsListAssignment_2_1(), "rule__Fieldm__AddsListAssignment_2_1");
					put(grammarAccess.getAddsFieldAccess().getFieldAssignment(), "rule__AddsField__FieldAssignment");
					put(grammarAccess.getRenamesFieldAccess().getFieldRefAssignment_0(), "rule__RenamesField__FieldRefAssignment_0");
					put(grammarAccess.getRenamesFieldAccess().getNewFieldRefAssignment_2(), "rule__RenamesField__NewFieldRefAssignment_2");
					put(grammarAccess.getRemovesFieldAccess().getFieldRefAssignment_0(), "rule__RemovesField__FieldRefAssignment_0");
					put(grammarAccess.getTypeAccess().getBasicAssignment_0(), "rule__Type__BasicAssignment_0");
					put(grammarAccess.getTypeAccess().getClassrefAssignment_1(), "rule__Type__ClassrefAssignment_1");
					put(grammarAccess.getExpressionAccess().getTerminalExpressionAssignment_0(), "rule__Expression__TerminalExpressionAssignment_0");
					put(grammarAccess.getExpressionAccess().getMessageAssignment_1_2(), "rule__Expression__MessageAssignment_1_2");
					put(grammarAccess.getExpressionAccess().getValueAssignment_2_1(), "rule__Expression__ValueAssignment_2_1");
					put(grammarAccess.getMessageAccess().getMethodCallAssignment_0(), "rule__Message__MethodCallAssignment_0");
					put(grammarAccess.getMessageAccess().getFieldAccessAssignment_1(), "rule__Message__FieldAccessAssignment_1");
					put(grammarAccess.getMethodCallAccess().getNameAssignment_0(), "rule__MethodCall__NameAssignment_0");
					put(grammarAccess.getMethodCallAccess().getArgsAssignment_2_0(), "rule__MethodCall__ArgsAssignment_2_0");
					put(grammarAccess.getMethodCallAccess().getArgsAssignment_2_1_1(), "rule__MethodCall__ArgsAssignment_2_1_1");
					put(grammarAccess.getFieldAccessAccess().getNameAssignment(), "rule__FieldAccess__NameAssignment");
					put(grammarAccess.getTerminalExpressionAccess().getThisAssignment_0(), "rule__TerminalExpression__ThisAssignment_0");
					put(grammarAccess.getTerminalExpressionAccess().getVariableAssignment_1(), "rule__TerminalExpression__VariableAssignment_1");
					put(grammarAccess.getTerminalExpressionAccess().getNewAssignment_2(), "rule__TerminalExpression__NewAssignment_2");
					put(grammarAccess.getTerminalExpressionAccess().getCastAssignment_3(), "rule__TerminalExpression__CastAssignment_3");
					put(grammarAccess.getTerminalExpressionAccess().getOriginalAssignment_4(), "rule__TerminalExpression__OriginalAssignment_4");
					put(grammarAccess.getTerminalExpressionAccess().getIntAssignment_5(), "rule__TerminalExpression__IntAssignment_5");
					put(grammarAccess.getTerminalExpressionAccess().getStringAssignment_6(), "rule__TerminalExpression__StringAssignment_6");
					put(grammarAccess.getTerminalExpressionAccess().getNullAssignment_7(), "rule__TerminalExpression__NullAssignment_7");
					put(grammarAccess.getInsertJavaAccess().getStringAssignment_2(), "rule__InsertJava__StringAssignment_2");
					put(grammarAccess.getThisAccess().getVariableAssignment(), "rule__This__VariableAssignment");
					put(grammarAccess.getVariableAccess().getParameterAssignment_0(), "rule__Variable__ParameterAssignment_0");
					put(grammarAccess.getVariableAccess().getFieldRefAssignment_1(), "rule__Variable__FieldRefAssignment_1");
					put(grammarAccess.getNewAccess().getTypeAssignment_1(), "rule__New__TypeAssignment_1");
					put(grammarAccess.getNewAccess().getArgsAssignment_3_0(), "rule__New__ArgsAssignment_3_0");
					put(grammarAccess.getNewAccess().getArgsAssignment_3_1_1(), "rule__New__ArgsAssignment_3_1_1");
					put(grammarAccess.getCastAccess().getTypeAssignment_0_2(), "rule__Cast__TypeAssignment_0_2");
					put(grammarAccess.getCastAccess().getExpressionAssignment_0_4(), "rule__Cast__ExpressionAssignment_0_4");
					put(grammarAccess.getOriginalAccess().getParAssignment_3_0(), "rule__Original__ParAssignment_3_0");
					put(grammarAccess.getOriginalAccess().getParAssignment_3_1_1(), "rule__Original__ParAssignment_3_1_1");
					put(grammarAccess.getInteroAccess().getValueAssignment(), "rule__Intero__ValueAssignment");
					put(grammarAccess.getStringaAccess().getValueAssignment(), "rule__Stringa__ValueAssignment");
					put(grammarAccess.getNulloAccess().getValueAssignment(), "rule__Nullo__ValueAssignment");
					put(grammarAccess.getArgumentAccess().getExpressionAssignment(), "rule__Argument__ExpressionAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.ui.contentassist.antlr.internal.InternalDJParser typedParser = (org.xtext.example.ui.contentassist.antlr.internal.InternalDJParser) parser;
			typedParser.entryRuleProgram();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DJGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DJGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
