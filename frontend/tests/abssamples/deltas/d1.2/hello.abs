module Hello;

interface Greeting {
    String sayHello();
}
class Greeter implements Greeting {
    String sayHello() {
        return "Hello world";
    }
}

class Application {
    Unit run() {
        Greeting bob;
        bob = new Greeter();
        String s = "";
        s = bob.sayHello();
    }
}
delta Rpt (Int times) {
    modifies class Greeter {
        modifies String sayHello() {
            String result = "";
            Int i = 0;
            while (i < times) {
           //     result = result + original();
                i = i + 1;
            }
            return result;
        }
    }
}
delta De {
    modifies class Greeter {
        modifies String sayHello() {
            return "Hallo Welt";
        }
    }
}
delta Nl {
    modifies class Greeter {
        modifies String sayHello() {
            return "Hallo wereld";
        }
    }
}
delta Gen(Cl hasMethod String sayHello(), String hello) {
    modifies class Cl {
        modifies String sayHello() {
            return hello;
        }
    }
}

//************************************************************
// Configuration (FCL)
//************************************************************
productline MultiLingualHelloWorld {
    features English, German, French, Dutch, Repeat;

    delta Rpt(Repeat.times) after De, Fr, Nl when Repeat;
    delta De when German;
    delta Fr when French;
    delta Nl when Dutch;
}

//************************************************************
// Products (FSL)
//************************************************************
// basic product with no deltas
product P1 (English) {
    new Application();
}

// apply delta Fr
product P2 (French) {
    new Application();
}

// apply deltas Fr and Repeat
product P3 (French, Repeat{times=10}) {
    new Application();
}

// apply deltas En and Repeat, but it should be refused because "times > 5"
product P4 (English, Repeat{times=6}) {
    new Application();
}

{
    // this automatically calls run()
    new Application();
}
