// test the original() call substitution
module HowOriginal;


interface Fruity {
	String get_name();
}

class Fruit implements Fruity {
    String name = "fruit";
    String get_name() { return name; }
}

/* MOD class - MOD method
 *
 * I seems that calling original() only makes sense in a delta
 * that modifies an existing class by modifying a method in that class.
 */
delta D1 {
    modifies class Fruit {
        modifies String get_name() {
//            String o = original();
//            return "D1." + o;
            return "D1";
        }
    }
}

delta D2 {
    modifies class Fruit {
        modifies String get_name() {
            String o = original();
            return "D2." + o;
        }
    }
}

delta D3 {
    modifies class Fruit {
        modifies String get_name() {
            String o = original();
            return "D3." + o;
        }
    }
}

delta D4 {
    modifies class Fruit {
        modifies String get_name() {
            String o = original();
            return "D4." + o;
        }
    }
}



//*****************************************************************

productline PL {
    features Stuff;
    delta D1 when Stuff;
    delta D2 after D1 when Stuff;
    delta D3 after D2 when Stuff;
    delta D4 after D3 when Stuff;

}

//*****************************************************************

product P (Stuff) {
    Fruity fruit = new Fruit();
    String name = fruit.get_name();
}


//*****************************************************************

// MainBlock
{
	Fruity fruit = new Fruit();
	String n = fruit.get_name();
}

