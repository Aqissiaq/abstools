module Env;
export *;
import Foreign from ABS.FLI;

interface IO {
   Unit println(String s);
}

[Foreign]
class IO implements IO {
   List<String> history = Nil;
   Unit println(String s) { 
          history = appendright(history,s);
   }
}


// test the original() call substitution
module HowOriginal;
import * from Env;

delta D1 {
	adds class Foo(IO io) {
		Unit bar() {
			io.println("D1");
		}
	}
}

delta D2a {
	modifies class Foo {
		modifies Unit bar() {
			D1.original();
			io.println("D2a");
		}
	}
}

delta D2b {
	modifies class Foo {
		modifies Unit bar() {
			D1.original();
			io.println("D2b");
		}
	}
}

delta D3 {
	modifies class Foo {
		modifies Unit bar() {
			io.println("-----");
			D2a.original();
			io.println("-----");
			D2b.original();
			io.println("-----");
		}
	}
}

//*****************************************************************

productline PL {
    features F;

    delta D1 when F;
    delta D2a after D1 when F;
    delta D2b after D1 when F;
    delta D3 after D2a, D2b when F; 
}

//*****************************************************************

product P(F);

//*****************************************************************

// MainBlock
{}

