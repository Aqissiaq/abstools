/*
 * BoundedBuffer.abs -- Bounded buffer example
 *
 * A first non-functioning ABS program. To test core parser.  
 *
 */

data Unit = Unit; // builtin  
data String; // builtin  
data Int; // builtin
data Bool = True | False; // builtin
data Fut<A> ;

type Data = Int ;
//type Buffer = DataList
data DataList = DataNil | ConsData(Data, DataList) ;

def Data head(DataList dl) = case dl { ConsData(d,l) => d ; };  
def Data tail(DataList dl) = case dl { ConsData(d,l) => l ; }; 

def DataList appendData(Data d, DataList list) = concat(list, ConsData(d,DataNil));

def DataList concat(DataList l1 , DataList l2) = 
  case l1 {
    DataNil => l2 ; 
    ConsData(hd,tl) => ConsData(hd, concat(tl,l2)) ; 
};	  

interface Buffer {

    Unit init();
    Unit append(Data d);
    Data remove();

}

interface Consumer {

} 

interface Producer {

}


class BoundedBuffer implements Buffer {
    
    //A bounded buffer
    DataList buffer; 
    Int max ;
    Int n ;

    //init
    {
        buffer = DataNil;
        max = 10 ;
        n = 0 ;
    }
    
    Unit append(Data d){
        Unit x ;
	await (n < max) ; 
	buffer = appendData(d,buffer);
	n = n + 1 ; 
    }
    
    Data remove() {
        await n > 0 ; 
        d = head(buffer);
        buffer = tail(buffer);
        n = n - 1 ; 
	return d ; 
    }
    
}

class Producer (Buffer b) implements Producer {
    
    Unit loop(Data d) {
    	b.append(d);
        this!loop(d + 1);
    }
}

class Consumer (Buffer b) implements Consumer {
    
    Unit loop() {
        Data x ; 
    	x = b.remove();
	this!loop();
    }
    
}
//Main
{
    Buffer buff;
    Producer p;
    Consumer c;
    buff = new BoundedBuffer(); 
    p = new Producer(buff); 	
    c = new Consumer(buff);
    p!loop(0);
    c!loop();
}

