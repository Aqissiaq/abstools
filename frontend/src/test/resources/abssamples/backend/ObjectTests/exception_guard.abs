module BackendTest;

interface I {
    Unit test();
    Unit set(Int i);
}

class C implements I {
    Int n = 0;
    recover {
        _ => skip;
    }
    Unit test() {
        await 5 / n > 0;
    }
    Unit set(Int i) { this.n = i; }
}

{
    Bool testresult = False;
    I o = new C();
    // Here we expect an exception (o will be kept alive by the recover block)
    try Unit r = await o!test();
    catch e => testresult = True;
    await o!set(5);
    // Here no exception is thrown
    try Unit r = await o!test();
    catch e => testresult = False;
    // println("Result: " + toString(testresult));
}
