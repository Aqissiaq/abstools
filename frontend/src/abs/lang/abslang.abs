data Bool = True | False;

data Int ;

data Unit = Unit ;

data String ;

data Fut<A> ;


data Opt<A> = None | Some(A) ;

def Bool isSome<A>(Opt<A> val) =
  case val {
    None => False ;
    Some(x) => True ;
  } ;

def A fromSome<A>(Opt<A> val) =
  case val {
    Some(x) => x ;
  } ;



data Either<A,B> = Left(A) | Right(B) ;

def A left<A,B>(Either<A,B> e) =
  case e {
     Left(x) => x;
  } ;

def B right<A,B>(Either<A,B> e) =
  case e {
     Right(x) => x;
  } ;
  