aspect DumpTree {

	//Added by ATO: 
	public void ASTNode.dumpTree(String indent, java.io.PrintStream pStream) {
		pStream.println(indent + this.toString());
		String childIndent = indent + "  ";
		for(int i = 0; i < getNumChild(); i++)
			getChildNoTransform(i).dumpTree(childIndent, pStream);
	}

	public void VarOrFieldDecl.dumpTree(String indent, java.io.PrintStream pStream) {
		pStream.println(indent + this.toString() + "\t\t" +  this.getName() + " : " 
						+  (this.getTypeExp()));
		String childIndent = indent + "  ";
		for(int i = 0; i < getNumChild(); i++)
			getChildNoTransform(i).dumpTree(childIndent, pStream);
	}

	public void IdUse.dumpTree(String indent, java.io.PrintStream pStream) {
	   	pStream.println(indent + this.toString() + "\t\t" +  this.getName());
	}

	public void VarRef.dumpTree(String indent, java.io.PrintStream pStream) {
	   	pStream.println(indent + this.toString() + "\t\t" +  this.getVarName());
	}

	public void AssignStmt.dumpTree(String indent, java.io.PrintStream pStream) {
	   	pStream.println(indent + this.toString() + "\t\t" +  this.getVar().getVarName() + "=" + this.getValue());
	}

	public void ReturnStmt.dumpTree(String indent, java.io.PrintStream pStream) {
	   	pStream.println(indent + this.toString() + "\t\t" +  this.getRetExp());
	}

	public void MethodSig.dumpTree(String indent, java.io.PrintStream pStream) {
	   	pStream.println(indent + this.toString() + "\t\t" +  this.getName());
			String childIndent = indent + "  ";
		for(int i = 0; i < getNumChild(); i++)
			getChildNoTransform(i).dumpTree(childIndent, pStream);
	}

	public void InterfaceDecl.dumpTree(String indent, java.io.PrintStream pStream) {
	   	pStream.println(indent + this.toString() + "\t\t" +  this.getName());
			String childIndent = indent + "  ";
		for(int i = 0; i < getNumChild(); i++)
			getChildNoTransform(i).dumpTree(childIndent, pStream);
	}


	public void Decl.dumpTree(String indent, java.io.PrintStream pStream) {
	   	pStream.println(indent + this.toString() + "\t\t" +  this.getName());
			String childIndent = indent + "  ";
		for(int i = 0; i < getNumChild(); i++)
			getChildNoTransform(i).dumpTree(childIndent, pStream);
	}




	// public void Block.dumpTree(String indent, java.io.PrintStream pStream) {
	// pStream.println(indent + "BLOCK" + " " +  this.getClass());
	// pStream.println(indent + getNumChild());
	// pStream.println(children);

	//  }



}  
