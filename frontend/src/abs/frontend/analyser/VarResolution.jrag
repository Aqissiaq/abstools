aspect VarResolution {

    syn lazy VarOrFieldDecl VarOrFieldUse.getDecl();
    eq VarUse.getDecl() = lookupVarName(getName());
    eq FieldUse.getDecl() = lookupVarName(getName());

    syn lazy int Block.getNumVar() = getVars().size();
    
    syn lazy Collection<VarDecl> Block.getVars() {
        ArrayList<VarDecl> res = new ArrayList<VarDecl>();
        for (Stmt stmt : getStmts()) {
            if (stmt instanceof VarDeclStmt) {
                res.add(((VarDeclStmt) stmt).getVarDecl());
            }
        }
        return res;
    }

    syn lazy VarOrFieldDecl Block.localLookupVarName(String name);
    eq Block.localLookupVarName(String name) {
        for (VarDecl decl : getVars()) {
            if (decl.getName().equals(name))
                return decl;
        }
        return null;
    }
    
    syn lazy PatternVarDecl Pattern.localLookupVarName(String name);
    eq Pattern.localLookupVarName(String name) = null;
    eq PatternVar.localLookupVarName(String name) {
        if (getVar().getName().equals(name))
            return getVar();
        return null;
    }
    eq ConstructorPattern.localLookupVarName(String name) {
        for (Pattern p : getParams()) {
            PatternVarDecl d = p.localLookupVarName(name);
            if (d != null)
                return d;
        }
        return null;
    }
    
    syn lazy VarOrFieldDecl Decl.localLookupVarName(String name);
    eq Decl.localLookupVarName(String name) = null;
    eq FunctionDecl.localLookupVarName(String name) {
        for (VarOrFieldDecl decl : getParams()) {
            if (decl.getName().equals(name))
                return decl;
        }
        return null;
    }
    
    eq ClassDecl.localLookupVarName(String name) {
   	  for (ParamDecl p : getParams()) {
   		  if (p.getName().equals(name)) 
   			  return p;
   	  }
   	 
        for (FieldDecl d : getFields()) {
            if (d.getName().equals(name))
                return d;
        }
        return null;
    }

    eq Block.getStmt(int i).lookupVarName(String name) {
        VarOrFieldDecl d = localLookupVarName(name);
        if (d != null)
            return d;
        
        return lookupVarName(name);
    }
    
    syn lazy VarOrFieldDecl MethodSig.localLookupVarName(String name) {
        for (ParamDecl d : getParams()) {
            if (d.getName().equals(name))
                return d;
        }
        return null;
    }
    
    inh VarOrFieldDecl MethodImpl.lookupVarName(String name);
    
    eq ClassDecl.getMethod(int i).lookupVarName(String name) 
        = localLookupVarName(name);
    
    syn lazy VarOrFieldDecl MethodImpl.localLookupVarName(String name) {
        VarOrFieldDecl d = getMethodSig().localLookupVarName(name);
        if (d != null) 
            return d;
        
        return lookupVarName(name);
    }

    eq InterfaceDecl.getBody(int i).lookupVarName(String name) 
        = getBody(i).localLookupVarName(name);
    
    eq MethodImpl.getMethodSig().lookupVarName(String name) { 
        VarOrFieldDecl d = getMethodSig().localLookupVarName(name);
        if (d != null) 
            return d;

        return lookupVarName(name);
    }
    
    eq MethodImpl.getBlock().lookupVarName(String name) {
        VarOrFieldDecl d = getBlock().localLookupVarName(name);
        if (d != null) 
            return d;
            
        return localLookupVarName(name);
    }
    
    eq Model.getBlock().lookupVarName(String name) = getBlock().localLookupVarName(name);
    eq Model.getDecl(int i).lookupVarName(String name) = getDecl(i).localLookupVarName(name);
    eq CaseExp.getBranch(int i).lookupVarName(String name) {
   	 VarOrFieldDecl d = getBranch(i).getLeft().localLookupVarName(name);
   	 if (d != null)
   		 return d;
   	 return lookupVarName(name);
    }

    eq LetExp.getExp().lookupVarName(String name) {
        if (getVar().getName().equals(name))
            return getVar();
        return lookupVarName(name);
    }
    
    inh VarOrFieldDecl Exp.lookupVarName(String name);
    inh VarOrFieldDecl Stmt.lookupVarName(String name);
    inh VarOrFieldDecl MethodSig.lookupVarName(String name);
    
}

// Local Variables:
// mode: java
// End:
