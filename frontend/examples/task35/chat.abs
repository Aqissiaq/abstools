module Chat;

data BandWidth = Low | Mid | High;

interface Client {}

//////////
// Text //
interface Text extends Client {
  Unit message(Client client, String msg);
}

class ClientImpl implements Client, Text {
  Unit message(Client client, String msg) {}
}

{
    Text c1 = new ClientImpl();
    Text c2 = new cog ClientImpl();
    c1.message(c2, "Hello");

}


///////////
// Voice //

delta DVoice;
uses Chat;

adds interface Voice {
  Unit call(Client client);
  Unit pickup();
  Unit hangup();
}

modifies class ClientImpl adds Voice {
  adds Unit call(Client client) {/*...*/}
  adds Unit pickup() {}
  adds Unit hangup() {}
}


///////////
// Video //

delta DVideo;
uses Chat;
adds interface Video {
  Unit startVideo();
  Unit stopVideo();
}

modifies class ClientImpl adds Video {
  adds Unit startVideo() {/*...*/}
  adds Unit stopVideo() {/*...*/}
}



// NEW DELTAS!!
delta Video2Voice;
uses Chat;
modifies class ClientImpl removes Video {
    removes Unit startVideo();
    removes Unit stopVideo();
}

delta Voice2Text;
uses Chat;
modifies class ClientImpl removes Voice {
    removes Unit call(Client client);
}




