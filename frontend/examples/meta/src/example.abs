module M;
import * from ABS.Meta;
import Foreign from ABS.FLI;

//---- IO via FFI ------------------------------------------------------
interface IO {
    Unit println(String s);
}

[Foreign]
class IO implements IO {
    List<String> history = Nil;
    Unit println(String s) { // this method is overridden IO_fli.java
        history = appendright(history, s);
    }
}
//-----------------------------------------------------------------------

interface I { 
    Int getFieldX();
    Unit setFieldX(Int x);
    String getFieldS();
    Unit setFieldS(String s);
}

class MyClass(Int fieldX, String fieldS) implements I {

    Int getFieldX() {
        return fieldX;
    }
    String getFieldS() {
        return fieldS;
    }

    Unit setFieldX(Int x) {
        this.fieldX = x;
    }
    Unit setFieldS(String s) {
        fieldS = s;
    }
}

interface I2 {}
class A implements I2 {}


{
    Bool b = False;
    I o1 = new MyClass(1, "Hello World");
    ObjectMirror m1 = reflect(o1);

    Cog cog1 = m1.getCog();

    String name = m1.getClassName();
    b = name.eq("MyClass");

    

    assert b;
    m1.debug(name);

    I2 o2 = new A();
    ObjectMirror m2 = reflect(o2);
    Class co2 = m2.getClass();
    
    m1.setClass(co2);

    name = m1.getClassName();
    m1.debug(name);
    
    o1 = new MyClass(2, "Hello2");
    // now o1 is a new object of class MyClass
    m1.debug(name);

    // reflect should give a brand new mirror
    m1 = reflect(o1);
    name = m1.getClassName();
    
    // that reflects a MyClass object
    m1.debug(name);
    
        
//    String s = o1.getFieldS();
    
    
    
//    String s = m.getClassName();
//    Class c = m.getClass();
    
//    IO io = new IO();
//    io.println(s);
}